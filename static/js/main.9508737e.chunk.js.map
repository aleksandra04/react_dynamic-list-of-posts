{"version":3,"sources":["ArrsApi.js","Comment.js","CommentList.js","User.js","Post.js","PostList.js","App.js","index.js"],"names":["getPosts","response","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getUsers","_context2","getComments","_context3","Comment","_ref","comment","react_default","createElement","className","name","body","email","CommentList","comments","map","currentComment","src_Comment","User","post","Fragment","concat","address","city","street","suite","Post","title","src_User","src_CommentList","PostList","GetPosts","_useState","useState","_useState2","Object","slicedToArray","visiblePosts","savePosts","_useState3","_useState4","isLoading","changeLoading","_useState5","_useState6","loaded","saveLoaded","_useState7","_useState8","error","saveError","_useState9","_useState10","filteredPosts","saveFilteredPosts","_useState11","_useState12","input","saveInput","loadPosts","posts","t0","PostsToShow","length","type","onClick","onChange","event","value","filtered","filter","includes","inputHandler","target","src_Post","key","id","App","src_PostList","_ref2","users","Promise","all","currentuser","find","user","userId","userComment","postId","objectSpread2","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9508737e.chunk.js","sourcesContent":["const URLposts = 'https://jsonplaceholder.typicode.com/posts';\nconst URLusers = 'https://jsonplaceholder.typicode.com/users';\nconst URLcomments = 'https://jsonplaceholder.typicode.com/comments';\n\nexport const getPosts = async() => {\n  const response = await fetch(URLposts);\n\n  return response.json();\n};\n\nexport const getUsers = async() => {\n  const response = await fetch(URLusers);\n\n  return response.json();\n};\n\nexport const getComments = async() => {\n  const response = await fetch(URLcomments);\n\n  return response.json();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <li>\n    <p className=\"comment\">{comment.name}</p>\n    <p className=\"comment\">{comment.body}</p>\n    <p className=\"comment\">{comment.email}</p>\n  </li>\n);\n\nComment.propTypes\n  = { comment: PropTypes.objectOf(PropTypes.string).isRequired };\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  comments.map(currentComment => <Comment comment={currentComment} />)\n);\n\nCommentList.propTypes\n  = { comments: PropTypes.arrayOf(PropTypes.object).isRequired };\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ post }) => (\n  <>\n    <p className=\"user\">{post.name}</p>\n    <p className=\"user\">{post.email}</p>\n    <p className=\"user\">\n      {`${post.address.city} ${post.address.street} ${post.address.suite}`}\n    </p>\n  </>\n);\n\nUser.propTypes\n  = { post: PropTypes.objectOf(PropTypes.string).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CommentList from './CommentList';\nimport User from './User';\n\nconst Post = ({ post }) => (\n  <div className=\"post\">\n    <p className=\"title\">{post.title}</p>\n    <p>{post.body}</p>\n    <div className=\"user\">\n      <User post={post} />\n    </div>\n    <ul>\n      <p className=\"title-comment\">Comments</p>\n      <CommentList comments={post.comments} />\n    </ul>\n  </div>\n);\n\nPost.propTypes = {\n  post: PropTypes.oneOfType([PropTypes.string,\n    PropTypes.number,\n  ])\n    .isRequired,\n};\n\nexport default Post;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ GetPosts }) => {\n  const [visiblePosts, savePosts] = useState([]);\n  const [isLoading, changeLoading] = useState(false);\n  const [loaded, saveLoaded] = useState(false);\n  const [error, saveError] = useState(false);\n  const [filteredPosts, saveFilteredPosts] = useState([]);\n  const [input, saveInput] = useState('');\n\n  const loadPosts = async() => {\n    try {\n      changeLoading(true);\n\n      const posts = await GetPosts();\n\n      savePosts(posts);\n      changeLoading(false);\n      saveLoaded(true);\n      saveError(false);\n    } catch (e) {\n      saveError(true);\n    }\n  };\n\n  const inputHandler = (value) => {\n    saveInput(value);\n    const filtered = visiblePosts.filter(post => post.title.includes(value)\n    || post.body.includes(value));\n\n    saveFilteredPosts(filtered);\n  };\n\n  const PostsToShow = input.length !== 0 ? filteredPosts : visiblePosts;\n\n  return (\n    <div>\n      {visiblePosts.length === 0 && !error && !isLoading\n        && (\n          <button\n            className=\"load\"\n            type=\"button\"\n            onClick={loadPosts}\n          >\n          Load\n          </button>\n        )\n      }\n      {isLoading && !error && <div className=\"loading\">Loading...</div>}\n      {loaded && !isLoading && (\n        <div>\n          <label>\n            Search\n            <input\n              className=\"input\"\n              type=\"search\"\n              onChange={event => inputHandler(event.target.value)}\n            />\n          </label>\n          {PostsToShow.map(post => (\n            <Post post={post} key={post.id} />\n          ))}\n        </div>\n      )}\n      {error && (\n        <div className=\"button_container\">\n          <p className=\"error\">Error occurred</p>\n          <button\n            className=\"load\"\n            type=\"button\"\n            onClick={loadPosts}\n          >\n            Try again\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nPostList.propTypes = { GetPosts: PropTypes.func.isRequired };\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\nimport { getPosts, getUsers, getComments } from './ArrsApi';\nimport PostList from './PostList';\n\nconst App = () => {\n  const modifyPosts = async() => {\n    const [posts, users, comments] = await Promise\n      .all([getPosts(), getUsers(), getComments()]);\n\n    return posts.map((post) => {\n      const currentuser = users.find(user => user.id === post.userId);\n      const userComment = comments\n        .filter(comment => comment.postId === post.id);\n\n      return {\n        ...post,\n        name: currentuser.name,\n        email: currentuser.email,\n        address: currentuser.address,\n        comments: userComment,\n      };\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of posts</h1>\n      <PostList GetPosts={modifyPosts} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}